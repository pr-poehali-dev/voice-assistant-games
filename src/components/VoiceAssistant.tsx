import { useState } from 'react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import Icon from '@/components/ui/icon';
import { toast } from '@/components/ui/use-toast';

interface VoiceAssistantProps {
  onBack: () => void;
}

const VoiceAssistant = ({ onBack }: VoiceAssistantProps) => {
  const [isListening, setIsListening] = useState(false);
  const [messages, setMessages] = useState<{ text: string; isBot: boolean }[]>([
    { text: '–ü—Ä–∏–≤–µ—Ç! –Ø –ü–æ–µ–∑–¥ –§—Ä–µ–¥–¥–∏! üöÇ –ù–∞–∂–º–∏ –Ω–∞ –º–∏–∫—Ä–æ—Ñ–æ–Ω –∏ –∑–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å!', isBot: true }
  ]);

  const responses = [
    '–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –î–∞–≤–∞–π –ø–æ–∏–≥—Ä–∞–µ–º –≤–º–µ—Å—Ç–µ! üéÆ',
    '–¢—ã –º–æ–ª–æ–¥–µ—Ü! –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! ‚≠ê',
    '–ö–∞–∫ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ! –†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –±–æ–ª—å—à–µ! ü§î',
    '–£—Ö —Ç—ã! –≠—Ç–æ –∑–¥–æ—Ä–æ–≤–æ! üéâ',
    '–Ø —Ä–∞–¥ —Ç–µ–±—è —Å–ª—ã—à–∞—Ç—å! –ü–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ! üöÇ',
    '–°—É–ø–µ—Ä! –¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å! üîç',
    '–í–∞—É! –¢—ã –æ—á–µ–Ω—å —É–º–Ω—ã–π! üß†',
    '–ö–∞–∫–∞—è –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–∞—è –∏–¥–µ—è! üí°'
  ];

  const startListening = () => {
    setIsListening(true);
    
    setTimeout(() => {
      setIsListening(false);
      const userMessage = '–ü—Ä–∏–≤–µ—Ç, –§—Ä–µ–¥–¥–∏!';
      setMessages(prev => [...prev, { text: userMessage, isBot: false }]);
      
      setTimeout(() => {
        const randomResponse = responses[Math.floor(Math.random() * responses.length)];
        setMessages(prev => [...prev, { text: randomResponse, isBot: true }]);
      }, 500);
    }, 2000);

    toast({
      title: "–°–ª—É—à–∞—é... üé§",
      description: "–ì–æ–≤–æ—Ä–∏ —Å–µ–π—á–∞—Å!",
    });
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-softWhite via-mint/5 to-yellow/5 p-4">
      <div className="max-w-3xl mx-auto">
        <div className="flex items-center justify-between mb-6">
          <Button
            onClick={onBack}
            variant="outline"
            className="rounded-3xl border-2 border-mint text-mint hover:bg-mint hover:text-white"
          >
            <Icon name="ArrowLeft" size={20} className="mr-2" />
            –ù–∞–∑–∞–¥
          </Button>
          <h1 className="text-3xl md:text-4xl text-mint font-fredoka">
            üé§ –ü–æ–µ–∑–¥ –§—Ä–µ–¥–¥–∏
          </h1>
          <div className="w-24" />
        </div>

        <Card className="bg-white rounded-4xl border-0 shadow-xl p-6 mb-6 h-[500px] overflow-y-auto">
          <div className="space-y-4">
            {messages.map((message, index) => (
              <div
                key={index}
                className={`flex ${message.isBot ? 'justify-start' : 'justify-end'} animate-slide-up`}
              >
                <div
                  className={`max-w-[80%] p-4 rounded-3xl ${
                    message.isBot
                      ? 'bg-gradient-to-r from-mint to-yellow text-white'
                      : 'bg-coral text-white'
                  }`}
                >
                  {message.isBot && (
                    <div className="text-2xl mb-2">üöÇ</div>
                  )}
                  <p className="text-lg">{message.text}</p>
                </div>
              </div>
            ))}
          </div>
        </Card>

        <div className="flex justify-center">
          <button
            onClick={startListening}
            disabled={isListening}
            className={`relative w-32 h-32 rounded-full transition-all ${
              isListening
                ? 'bg-coral animate-pulse scale-110'
                : 'bg-gradient-to-r from-mint to-yellow hover:scale-105'
            } shadow-2xl`}
          >
            <div className="absolute inset-0 flex items-center justify-center">
              <Icon
                name={isListening ? 'Radio' : 'Mic'}
                size={48}
                className="text-white"
              />
            </div>
            {isListening && (
              <div className="absolute -inset-2 rounded-full border-4 border-coral animate-ping" />
            )}
          </button>
        </div>

        <div className="text-center mt-6">
          <p className="text-xl font-fredoka text-gray-600">
            {isListening ? '–°–ª—É—à–∞—é —Ç–µ–±—è... üëÇ' : '–ù–∞–∂–º–∏, —á—Ç–æ–±—ã –≥–æ–≤–æ—Ä–∏—Ç—å'}
          </p>
        </div>

        <div className="grid grid-cols-3 gap-4 mt-8">
          <Card className="bg-mint/10 border-0 rounded-3xl p-4 text-center">
            <div className="text-3xl mb-2">üó£Ô∏è</div>
            <div className="font-nunito text-sm text-gray-600">–ì–æ–≤–æ—Ä–∏</div>
          </Card>
          <Card className="bg-yellow/10 border-0 rounded-3xl p-4 text-center">
            <div className="text-3xl mb-2">üëÇ</div>
            <div className="font-nunito text-sm text-gray-600">–°–ª—É—à–∞–π</div>
          </Card>
          <Card className="bg-coral/10 border-0 rounded-3xl p-4 text-center">
            <div className="text-3xl mb-2">üí¨</div>
            <div className="font-nunito text-sm text-gray-600">–û–±—â–∞–π—Å—è</div>
          </Card>
        </div>
      </div>
    </div>
  );
};

export default VoiceAssistant;
